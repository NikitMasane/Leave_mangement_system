{"version":3,"file":"static/js/719.6d3cb32a.chunk.js","mappings":"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","sources":["APIRequest/UserRequest.js","components/Ui/PageTitle.js","pages/Profile/ProfilePage.jsx"],"sourcesContent":["//Internal Import\r\nimport SessionHelper from \"../helpers/SessionHelper\";\r\nimport ToastMessage from \"../helpers/ToastMessage\";\r\nimport { SetUserDetails } from \"../redux/slices/UserSlice\";\r\nimport store from \"../redux/store/store\";\r\nimport RestClient from \"./RestClient\";\r\n\r\nclass UserRequest {\r\n  static async ProfileDetails() {\r\n    const { data } = await RestClient.getRequest(\"/Employee/ProfileDetails\");\r\n    if (data) {\r\n      store.dispatch(SetUserDetails(data?.[0]));\r\n      return true;\r\n    }\r\n  }\r\n\r\n  static async SendRecoveryOtp(Email) {\r\n    const { data } = await RestClient.getRequest(\r\n      `/Employee/SendRecoveryOtp/${Email}`,\r\n    );\r\n    if (data) {\r\n      ToastMessage.successMessage(data?.message);\r\n      SessionHelper.SetRecoverVerifyEmail(Email);\r\n      return true;\r\n    }\r\n  }\r\n\r\n  static async VerifyRecoveryOtp(Otp) {\r\n    const Email = SessionHelper.GetRecoverVerifyEmail();\r\n    console.log(Email);\r\n    const { data } = await RestClient.getRequest(\r\n      `/Employee/VerifyRecoveryOtp/${Email}/${Otp}`,\r\n    );\r\n    if (data) {\r\n      SessionHelper.SetRecoverVerifyOTP(Otp);\r\n      ToastMessage.successMessage(data?.message);\r\n      return true;\r\n    }\r\n  }\r\n\r\n  static async RecoveryResetPass(PostBody) {\r\n    const Email = SessionHelper.GetRecoverVerifyEmail();\r\n    const Otp = SessionHelper.GetRecoverVerifyOTP();\r\n    const { data } = await RestClient.postRequest(\r\n      `/Employee/RecoveryResetPass/${Email}/${Otp}`,\r\n      PostBody,\r\n    );\r\n    if (data) {\r\n      ToastMessage.successMessage(data?.message);\r\n      return true;\r\n    }\r\n  }\r\n\r\n  static async VerifyAccountSentOtp() {\r\n    const Email = SessionHelper.GetRecoverVerifyEmail();\r\n    console.log(Email);\r\n    const { data } = await RestClient.getRequest(\r\n      `/User/VerifyAccountSentOtp/${Email}`,\r\n    );\r\n    if (data) {\r\n      ToastMessage.successMessage(data?.message);\r\n      return true;\r\n    }\r\n  }\r\n\r\n  static async VerifyAccountVerifyOtp(Email, Otp) {\r\n    const { data } = await RestClient.getRequest(\r\n      `/User/VerifyAccountVerifyOtp/${Email}/${Otp}`,\r\n    );\r\n    if (data) {\r\n      ToastMessage.successMessage(data?.message);\r\n      return true;\r\n    }\r\n  }\r\n\r\n  static async ProfileUpdate(PostBody) {\r\n    const { data } = await RestClient.updateRequest(\r\n      `/Employee/ProfileUpdate`,\r\n      PostBody,\r\n    );\r\n    if (data) {\r\n      ToastMessage.successMessage(data?.message);\r\n      return true;\r\n    }\r\n  }\r\n\r\n  static async EmployeeChangePassword(PostBody) {\r\n    const { data } = await RestClient.putRequest(\r\n      `/Employee/EmployeeChangePassword`,\r\n      PostBody,\r\n    );\r\n    if (data) {\r\n      ToastMessage.successMessage(data?.message);\r\n      return true;\r\n    }\r\n  }\r\n}\r\n\r\nexport default UserRequest;\r\n","// @flow\r\nimport React from \"react\";\r\nimport { Row, Col, Breadcrumb } from \"react-bootstrap\";\r\n\r\ntype BreadcrumbItems = {\r\n  label: string,\r\n  path: string,\r\n  active?: boolean,\r\n};\r\n\r\ntype PageTitleProps = {\r\n  breadCrumbItems: Array<BreadcrumbItems>,\r\n  title: string,\r\n};\r\n\r\n/**\r\n * PageTitle\r\n */\r\nconst PageTitle = (props: PageTitleProps): React$Element<any> => {\r\n  return (\r\n    <Row>\r\n      <Col>\r\n        <div className=\"page-title-box\">\r\n          <div className=\"page-title-right\">\r\n            <Breadcrumb listProps={{ className: \"m-0\" }}>\r\n              <Breadcrumb.Item href=\"/dashboard\">Dashboard</Breadcrumb.Item>\r\n\r\n              {props.breadCrumbItems.map((item, index) => {\r\n                return item.active ? (\r\n                  <Breadcrumb.Item active key={index}>\r\n                    {item.label}\r\n                  </Breadcrumb.Item>\r\n                ) : (\r\n                  <Breadcrumb.Item key={index} href={item.path}>\r\n                    {item.label}\r\n                  </Breadcrumb.Item>\r\n                );\r\n              })}\r\n            </Breadcrumb>\r\n          </div>\r\n          <h4 className=\"page-title\">{props.title}</h4>\r\n        </div>\r\n      </Col>\r\n    </Row>\r\n  );\r\n};\r\n\r\nexport default PageTitle;\r\n","//External Lib Import\r\nimport { useSelector } from \"react-redux\";\r\nimport { useState } from \"react\";\r\nimport { Row, Col, Card, Button } from \"react-bootstrap\";\r\nimport * as yup from \"yup\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\n//Internal Lib Import\r\nimport PageTitle from \"../../components/Ui/PageTitle\";\r\nimport { FormInput } from \"../../components/Ui\";\r\nimport { VerticalForm } from \"../../components/Ui\";\r\nimport UserRequest from \"../../APIRequest/UserRequest\";\r\n\r\nconst ProfilePage = () => {\r\n  const { t } = useTranslation();\r\n  const { UserDetails } = useSelector((state) => state.User);\r\n\r\n  let [PreviewImg, SetPreviewImg] = useState(UserDetails.Image);\r\n\r\n  const navigate = useNavigate();\r\n\r\n  /*\r\n   * form validation schema\r\n   */\r\n  const validationSchema = yup.object().shape({\r\n    FirstName: yup.string().required(\"Please Enter First Name\"),\r\n    LastName: yup.string().required(\"Please Enter Last Name\"),\r\n    Gender: yup.string().required(\"Please Select Gender\"),\r\n    Phone: yup.string().required(\"Please Enter Phone\"),\r\n    Email: yup.string().required(\"Please Enter Email\"),\r\n    DateOfBirth: yup.string().required(\"Please Enter Date Of Birth\"),\r\n    Address: yup.string().required(\"Please Enter Address\"),\r\n  });\r\n\r\n  /**\r\n   * Handle the form submission\r\n   */\r\n  const CreateUpdateEmployee = (values) => {\r\n    UserRequest.ProfileUpdate({\r\n      FirstName: values.FirstName,\r\n      LastName: values.LastName,\r\n      Gender: values.Gender,\r\n      DateOfBirth: values.DateOfBirth,\r\n      Address: values.Address,\r\n      Phone: values.Phone,\r\n      Email: values.Email,\r\n      Image: values.Image,\r\n    }).then((result) => {\r\n      if (result) {\r\n        UserRequest.ProfileDetails().then((r) => {\r\n          if (r) {\r\n            navigate(\"/dashboard\");\r\n          }\r\n        });\r\n      }\r\n    });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <PageTitle\r\n        breadCrumbItems={[\r\n          { label: \"Profile\", path: \"/dashboard\" },\r\n          {\r\n            label: \"Update Profile\",\r\n            path: \"/dashboard\",\r\n            active: true,\r\n          },\r\n        ]}\r\n        title=\"Update Profile\"\r\n      />\r\n\r\n      <Row>\r\n        <Col>\r\n          <Card>\r\n            <Card.Body>\r\n              <Row>\r\n                <Col>\r\n                  <VerticalForm\r\n                    onSubmit={CreateUpdateEmployee}\r\n                    validationSchema={validationSchema}\r\n                    defaultValues={UserDetails}\r\n                  >\r\n                    <Row>\r\n                      <Col>\r\n                        <img\r\n                          src={PreviewImg || UserDetails?.Image}\r\n                          alt=\"EmployeeAvatar\"\r\n                          style={{ maxWidth: \"100px\" }}\r\n                        />\r\n                        <hr />\r\n                        <Row>\r\n                          <Col xl={6}>\r\n                            <FormInput\r\n                              name=\"Image\"\r\n                              label={t(\"Employee Avatar\")}\r\n                              type=\"file\"\r\n                              placeholder={t(\"Upload Employee Avatar\")}\r\n                              containerClass={\"mb-3\"}\r\n                              onChange={(img) => SetPreviewImg(img)}\r\n                            />\r\n                          </Col>\r\n                          <Col xl={6}>\r\n                            <FormInput\r\n                              name=\"FirstName\"\r\n                              label={t(\"First Name\")}\r\n                              placeholder={t(\"Enter First Name\")}\r\n                              containerClass={\"mb-3 mt-4\"}\r\n                            />\r\n                          </Col>\r\n                        </Row>\r\n                      </Col>\r\n                    </Row>\r\n\r\n                    <Row>\r\n                      <Col xl={6}>\r\n                        <FormInput\r\n                          name=\"LastName\"\r\n                          label={t(\"Last Name\")}\r\n                          placeholder={t(\"Enter Last Name\")}\r\n                          containerClass={\"mb-3\"}\r\n                        />\r\n                      </Col>\r\n                      <Col xl={6}>\r\n                        <FormInput\r\n                          name=\"Gender\"\r\n                          label={t(\"Gender\")}\r\n                          placeholder={t(\"Select Gender\")}\r\n                          containerClass={\"mb-3\"}\r\n                          type=\"react-single-select\"\r\n                          options={[\r\n                            { value: \"Male\", label: \"Male\" },\r\n                            { value: \"Female\", label: \"Female\" },\r\n                            { value: \"Others\", label: \"Others\" },\r\n                          ]}\r\n                          defaultValue={[\r\n                            { value: \"Male\", label: \"Male\" },\r\n                            { value: \"Female\", label: \"Female\" },\r\n                            { value: \"Others\", label: \"Others\" },\r\n                          ].find((i) => i.value === UserDetails?.Gender)}\r\n                        />\r\n                      </Col>\r\n                    </Row>\r\n\r\n                    <Row>\r\n                      <Col xl={6}>\r\n                        <FormInput\r\n                          type=\"react-phone\"\r\n                          name=\"Phone\"\r\n                          label={t(\"Phone\")}\r\n                          placeholder={t(\"Enter Phone\")}\r\n                          containerClass={\"mb-3\"}\r\n                        />\r\n                      </Col>\r\n                      <Col xl={6}>\r\n                        <FormInput\r\n                          name=\"Email\"\r\n                          label={t(\"Email\")}\r\n                          placeholder={t(\"Enter Email\")}\r\n                          containerClass={\"mb-3\"}\r\n                          type=\"email\"\r\n                        />\r\n                      </Col>\r\n                    </Row>\r\n\r\n                    <Row>\r\n                      <Col>\r\n                        <FormInput\r\n                          type=\"date\"\r\n                          name=\"DateOfBirth\"\r\n                          label={t(\"Date Of Birth\")}\r\n                          placeholder={t(\"Enter Date Of Birth\")}\r\n                          containerClass={\"mb-3\"}\r\n                        />\r\n                      </Col>\r\n                    </Row>\r\n\r\n                    <Row>\r\n                      <Col>\r\n                        <FormInput\r\n                          name=\"Address\"\r\n                          label={t(\"Address\")}\r\n                          placeholder={t(\"Enter Address\")}\r\n                          containerClass={\"mb-3\"}\r\n                          type=\"textarea\"\r\n                        />\r\n                      </Col>\r\n                    </Row>\r\n\r\n                    <Row className=\"mt-2\">\r\n                      <Col>\r\n                        <Button type=\"submit\" variant=\"success\">\r\n                          Update Profile\r\n                        </Button>\r\n                      </Col>\r\n                    </Row>\r\n                  </VerticalForm>\r\n                </Col>\r\n              </Row>\r\n            </Card.Body>\r\n          </Card>\r\n        </Col>\r\n      </Row>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ProfilePage;\r\n"],"names":["UserRequest","_classCallCheck","_createClass","key","value","_ProfileDetails","_asyncToGenerator","_regeneratorRuntime","mark","_callee","_yield$RestClient$get","data","wrap","_context","prev","next","RestClient","sent","store","SetUserDetails","abrupt","stop","apply","arguments","_SendRecoveryOtp","_callee2","Email","_yield$RestClient$get2","_context2","concat","ToastMessage","message","SessionHelper","_x","_VerifyRecoveryOtp","_callee3","Otp","_yield$RestClient$get3","_context3","console","log","_x2","_RecoveryResetPass","_callee4","PostBody","_yield$RestClient$pos","_context4","_x3","_VerifyAccountSentOtp","_callee5","_yield$RestClient$get4","_context5","_VerifyAccountVerifyOtp","_callee6","_yield$RestClient$get5","_context6","_x4","_x5","_ProfileUpdate","_callee7","_yield$RestClient$upd","_context7","_x6","_EmployeeChangePassword","_callee8","_yield$RestClient$put","_context8","_x7","props","_jsx","Row","children","Col","_jsxs","className","Breadcrumb","listProps","href","breadCrumbItems","map","item","index","active","label","path","title","t","useTranslation","UserDetails","useSelector","state","User","_useState","useState","Image","_useState2","_slicedToArray","PreviewImg","SetPreviewImg","navigate","useNavigate","validationSchema","yup","shape","FirstName","required","LastName","Gender","Phone","DateOfBirth","Address","_Fragment","PageTitle","Card","VerticalForm","onSubmit","values","then","result","r","defaultValues","src","alt","style","maxWidth","xl","FormInput","name","type","placeholder","containerClass","onChange","img","options","defaultValue","find","i","Button","variant"],"sourceRoot":""}